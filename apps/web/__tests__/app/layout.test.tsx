import { describe, it, expect } from 'vitest';
import { render } from '@testing-library/react';
import RootLayout, { metadata } from '../../app/layout';

// Mock Inter font
vi.mock('next/font/google', () => ({
  Inter: () => ({
    className: 'inter-font-class',
  }),
}));

// Suppress specific React DOM warnings for layout tests
const originalError = console.error;
beforeAll(() => {
  console.error = (...args: any[]) => {
    if (args[0].includes('validateDOMNesting')) return;
    originalError.call(console, ...args);
  };
});

afterAll(() => {
  console.error = originalError;
});

describe('RootLayout', () => {
  it('should render children correctly', () => {
    const testContent = 'Test Content';
    const { getByText } = render(
      <RootLayout>
        <div>{testContent}</div>
      </RootLayout>
    );
    
    expect(getByText(testContent)).toBeInTheDocument();
  });

  it('should have correct metadata', () => {
    expect(metadata).toEqual({
      title: 'Acme Web App',
      description: 'Generated by create next app'
    });
  });

  it('should include Inter font class', () => {
    const { container } = render(
      <RootLayout>
        <div>Content</div>
      </RootLayout>
    );
    
    const body = container.querySelector('body');
    expect(body?.className).toBe('inter-font-class');
  });
});
