name: Validate Architecture Documentation

on:
  pull_request:
    paths:
      - '**/*.md'
      - 'docs/architecture/**'
      - '.github/workflows/validate-docs.yml'
      - 'tools/docs-manager/**'

# Prevent multiple workflow runs on the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write # Needed for commenting on PRs

jobs:
  validate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 15 # Increased timeout for retries

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git diff

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.14 # Pin to same version as main CI

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            tools/docs-manager/node_modules
          key: ${{ runner.os }}-bun-docs-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-docs-

      - name: Setup retry function
        run: |
          function retry_command() {
            local cmd="$1"
            local max_retries=3
            local retry_count=0
            local retry_delay=5

            until eval "$cmd"; do
              retry_count=$((retry_count + 1))
              if [ $retry_count -eq $max_retries ]; then
                echo "Failed after $max_retries attempts"
                exit 1
              fi
              echo "Failed. Retrying in ${retry_delay} seconds... (Attempt $retry_count of $max_retries)"
              sleep $retry_delay
              retry_delay=$((retry_delay * 2))
            done
          }
          export -f retry_command

      - name: Install dependencies
        id: install
        run: |
          echo "::group::Install root dependencies"
          bun install --frozen-lockfile
          echo "::endgroup::"
          
          echo "::group::Install docs-manager dependencies"
          cd tools/docs-manager && bun install --frozen-lockfile
          echo "::endgroup::"
        continue-on-error: false

      - name: Check formatting
        id: format
        working-directory: tools/docs-manager
        run: retry_command "bun run format:check"
        continue-on-error: false

      - name: Validate cross-references
        id: xref-check
        working-directory: tools/docs-manager
        run: retry_command "bun run xref:check"
        continue-on-error: false

      - name: Generate cross-references
        id: xref-gen
        working-directory: tools/docs-manager
        run: retry_command "bun run xref"
        continue-on-error: false

      - name: Validate diagrams
        id: diagrams
        working-directory: tools/docs-manager
        run: retry_command "bun run validate"
        continue-on-error: false

      - name: Generate diagram index
        id: index
        working-directory: tools/docs-manager
        run: |
          # Ensure docs directory exists
          mkdir -p ../docs/architecture/diagrams

          retry_command "bun run index"
        continue-on-error: false

      - name: Check for changes
        id: git-check
        run: |
          echo "::group::Checking for documentation changes"
          if ! git diff --exit-code; then
            echo "changes=true" >> $GITHUB_OUTPUT
            git diff > git_diff.txt
            echo "Found documentation changes that need to be committed"
          else
            echo "No documentation changes needed"
          fi
          echo "::endgroup::"

      - name: Create PR comment
        if: steps.git-check.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            try {
              const diff = fs.readFileSync('git_diff.txt', 'utf8');

              const body = `
              ## Documentation Validation Results

              The documentation validation process has detected necessary updates to maintain consistency:

              <details>
              <summary>View Changes</summary>

              \`\`\`diff
              ${diff}
              \`\`\`

              </details>

              Please run the following commands locally and commit the changes:
              \`\`\`bash
              # From repository root
              bun run docs:maintain
              cd tools/docs-manager && bun run format
              \`\`\`
              `;

              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body
              });
              
              console.log('Successfully created PR comment');
            } catch (error) {
              console.error('Failed to create PR comment:', error);
              throw error;
            }

      - name: Fail if changes needed
        if: steps.git-check.outputs.changes == 'true'
        run: |
          echo "::error::Documentation updates needed. Please run the following commands:"
          echo "1. bun run docs:maintain"
          echo "2. cd tools/docs-manager && bun run format"
          exit 1
